2023-09-08 14:04:55,134 =============================================================
2023-09-08 14:04:55,134 =============================================================
2023-09-08 14:04:55,134 Today is 2023-09-08 at 02:04 PM
2023-09-08 14:04:55,219 This file is running on: nt Windows 10
2023-09-08 14:04:55,219 The Python version is: 3.11.5
2023-09-08 14:04:55,220 The active conda environment is:  None
2023-09-08 14:04:55,220 The active pip environment is:    None
2023-09-08 14:04:55,220 The active environment path is:   C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.1520.0_x64__qbz5n2kfra8p0
2023-09-08 14:04:55,220 The current working directory is: C:\Users\A2645055\OneDrive - H&R BLOCK LTD\Uma\College\DataFundamental\datafun-03-datatypes
2023-09-08 14:04:55,220 This source file is in:           C:\Users\A2645055\OneDrive - H&R BLOCK LTD\Uma\College\DataFundamental\datafun-03-datatypes
2023-09-08 14:04:55,220 =============================================================
2023-09-08 14:04:55,220 =============================================================
2023-09-08 14:04:55,220  list_A is [121, 111, 88, 89, 101, 106, 95, 103, 107, 101, 81, 109, 104, 121, 111, 88, 89, 101, 106, 95, 103, 107, 101, 81, 109, 104]
2023-09-08 14:04:55,220 list_x is [10, 10, 45, 34, 88, 40, 34, 66, 80, 70]
2023-09-08 14:04:55,221  list_y is [45, 32, 23, 11, 12, 14, 78, 67, 56, 48]
2023-09-08 14:04:55,222 mean of list_A is 101.23076923076923 
2023-09-08 14:04:55,222 median of list_A is 103.0
2023-09-08 14:04:55,223 mode of list_A is 101
2023-09-08 14:04:55,223 variance of list_A is 110.90461538461538
2023-09-08 14:04:55,224 standard deviation of list_A is 10.531126026433041
2023-09-08 14:04:55,224  list_x is [10, 10, 45, 34, 88, 40, 34, 66, 80, 70]
2023-09-08 14:04:55,224  list_y is [45, 32, 23, 11, 12, 14, 78, 67, 56, 48]
2023-09-08 14:04:55,224  correlation between list_x and list_y is 0.0502010718995214
2023-09-08 14:04:55,224 The equation of best fit line is y= 0.04374935510974189x + 36.51315576126531
2023-09-08 14:04:55,224 We predict that when x = {newx}, y will be about {newy}
2023-09-08 14:04:55,225 lis_A is [121, 111, 88, 89, 101, 106, 95, 103, 107, 101, 81, 109, 104, 121, 111, 88, 89, 101, 106, 95, 103, 107, 101, 81, 109, 104]
2023-09-08 14:04:55,225 the max value is 121
2023-09-08 14:04:55,225  the min value is 81
2023-09-08 14:04:55,225  the len() of list_A is 26
2023-09-08 14:04:55,225 The sum() is 2632
2023-09-08 14:04:55,225 The average is 101.23076923076923
2023-09-08 14:04:55,225 Given score list: [121, 111, 88, 89, 101, 106, 95, 103, 107, 101, 81, 109, 104, 121, 111, 88, 89, 101, 106, 95, 103, 107, 101, 81, 109, 104]
2023-09-08 14:04:55,225 Using the built-it function sorted(lst) gives: [81, 81, 88, 88, 89, 89, 95, 95, 101, 101, 101, 101, 103, 103, 104, 104, 106, 106, 107, 107, 109, 109, 111, 111, 121, 121]
2023-09-08 14:04:55,225 Using the built-in function sorted(lst,reverse=True) gives: [121, 121, 111, 111, 109, 109, 107, 107, 106, 106, 104, 104, 103, 103, 101, 101, 101, 101, 95, 95, 89, 89, 88, 88, 81, 81]
2023-09-08 14:04:55,225  list_A is append() with list_B is None
2023-09-08 14:04:55,226 the extend() is list_A is None
2023-09-08 14:04:55,226  the insert() in list_A is None
2023-09-08 14:04:55,226 the remove item from list_C is None
2023-09-08 14:04:55,226 How many times 111 appear in list is 2
2023-09-08 14:04:55,226 Asc sort of list_A is None
2023-09-08 14:04:55,226  Desc sort of list_A is None
2023-09-08 14:04:55,226 copy of list_A is [121, 121, 111, 111, 109, 109, 107, 107, 106, 106, 104, 104, 103, 103, 101, 101, 101, 101, 95, 95, 89, 89, 88, 88, 81, 81, 77, 66, 56, 55, 45, 34, 32]
2023-09-08 14:04:55,226 Popped the first (index=0): 121 and now, new_list is: [121, 111, 111, 109, 109, 107, 107, 106, 106, 104, 104, 103, 103, 101, 101, 101, 101, 95, 95, 89, 89, 88, 88, 81, 81, 77, 66, 56, 55, 45, 34, 32]
2023-09-08 14:04:55,226 Popped the last (index=-1): 32 and now, new_list is: [121, 111, 111, 109, 109, 107, 107, 106, 106, 104, 104, 103, 103, 101, 101, 101, 101, 95, 95, 89, 89, 88, 88, 81, 81, 77, 66, 56, 55, 45, 34]
2023-09-08 14:04:55,227 The list: [121, 111, 111, 109, 109, 107, 107, 106, 106, 104, 104, 103, 103, 101, 101, 101, 101, 95, 95, 89, 89, 88, 88, 81, 81, 77, 66, 56, 55, 45, 34]
2023-09-08 14:04:55,227 Scores over 100: [<filter object at 0x000001EFEB879B10>]
2023-09-08 14:04:55,227 Doubled list_A: [<map object at 0x000001EFEB87AE60>]
2023-09-08 14:04:55,227 Square root of scores: <map object at 0x000001EFEB87ADD0>
2023-09-08 14:04:55,227 Radius list: [7, 8, 9, 10, 11]
2023-09-08 14:04:55,227 Area of circles: [<map object at 0x000001EFEB87AE90>]
2023-09-08 14:04:55,227 The list: [121, 111, 111, 109, 109, 107, 107, 106, 106, 104, 104, 103, 103, 101, 101, 101, 101, 95, 95, 89, 89, 88, 88, 81, 81, 77, 66, 56, 55, 45, 34]
2023-09-08 14:04:55,227 list_A over 100 (using list comprehensions!): [121, 111, 111, 109, 109, 107, 107, 106, 106, 104, 104, 103, 103, 101, 101, 101, 101]
2023-09-08 14:04:55,228 In the list_A under 42 (using list comprehensions!): [34]
2023-09-08 14:04:55,228 Doubled list_A is (using list comprehensions!): [242, 222, 222, 218, 218, 214, 214, 212, 212, 208, 208, 206, 206, 202, 202, 202, 202, 190, 190, 178, 178, 176, 176, 162, 162, 154, 132, 112, 110, 90, 68]
2023-09-08 14:04:55,228 Given radius_list: [7, 6, 9, 8, 9]
2023-09-08 14:04:55,228 Area of circles: [153.93804002589985, 113.09733552923255, 254.46900494077323, 201.06192982974676, 254.46900494077323]
2023-09-08 14:04:55,228 Circumference of circles: [43.982297150257104, 37.69911184307752, 56.548667764616276, 50.26548245743669, 56.548667764616276]
2023-09-08 14:04:55,228 Mastering comprehesions is a valuable skill for data scientists.
2023-09-08 14:04:55,228 Given numbers: [9, 8, 7, 6, 5]
2023-09-08 14:04:55,228 Squares of numbers using [x ** 2 for x in numbers] is [81, 64, 49, 36, 25]
